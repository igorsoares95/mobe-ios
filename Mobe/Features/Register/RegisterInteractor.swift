//
//  RegisterInteractor.swift
//  Mobe
//
//  Created by Igor Soares on 22/09/19.
//  Copyright (c) 2019 Igor Soares. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RegisterBusinessLogic
{
  func registerUser(request: Register.Something.Request)
}

protocol RegisterDataStore
{
  //var name: String { get set }
}

class RegisterInteractor: RegisterBusinessLogic, RegisterDataStore
{
  var presenter: RegisterPresentationLogic?
  var worker: SubscriberService?
  //var name: String = ""
  
  // MARK: Do something
  
  func registerUser(request: Register.Something.Request)
  {
    worker = SubscriberService()

    let name = request.name
    let email = request.email
    let telephone = request.telephone
    let password = request.password
    
    worker?.register(name: name, email: email, telephone: telephone, password: password, completionHandler: { response in
      switch response {
      case .success(let subscriber):
        Subscriber.save(subscriber: subscriber)
        self.presenter?.presentSomething(response: Register.Something.Response(error: nil))
      case .failure(let error as RegisterError):
        self.presenter?.presentSomething(response: Register.Something.Response(error: error.localizedDescription))
      case .failure(let error as APIClientError):
        self.presenter?.presentSomething(response: Register.Something.Response(error: error.localizedDescription))
      case .failure(let error):
        self.presenter?.presentSomething(response: Register.Something.Response(error: error.localizedDescription))
      }
    })
    
  }
}
